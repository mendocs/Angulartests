/* You can add global styles to this file, and also import other style files*/
body { margin:20px; }

//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––

// A map of breakpoints.
$breakpoints: (
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1200px
);


//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

  // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

/*
@media only screen and (max-width: 600px) {
	html {
	  background-color: red;
	}
}
*/



	  /*
	  $breakpoints: (
		xs: azul,
		sm: amarelo,
		md: verde,
		lg: cinza
	  );
	  */

	  html {
		background-color:pink;
	}

	  @include respond-above(xs) {
		html {
			background-color:blue;
		}
	  }


	  @include respond-above(sm) {
		html {
			background-color:yellow;
		}
	  }


	  @include respond-above(md) {
		html {
			background-color:green;
		}
	  }

	  @include respond-above(lg) {
		html {
			background-color:gray;
		}
	  }



	  .animated {
		-webkit-animation-duration: 1s;
		animation-duration: 1s;
		-webkit-animation-fill-mode: both;
		animation-fill-mode: both;
	 }
	 @-webkit-keyframes fadeIn {
	   0% {opacity: 0;}
	   100% {opacity: 1;}
	 }
	 @keyframes fadeIn {
	   0% {opacity: 0;}
	   100% {opacity: 1;}
	 }
	 .fadeIn {
	   -webkit-animation-name: fadeIn;
	   animation-name: fadeIn;
	 }

	 @-webkit-keyframes fadeInRight {
		0% {
		   opacity: 1;
		   -webkit-transform: translateX(1120px);
		}
		100% {
		   opacity: 1;
		   -webkit-transform: translateX(0);
		}
	 }

	 @keyframes fadeInRight {
		0% {
		   opacity: 1;
		   transform: translateX(11120px);
		}
		100% {
		   opacity: 1;
		   transform: translateX(0);
		}
	 }

	 .fadeInRight {
		-webkit-animation-name: fadeInRight;
		animation-name: fadeInRight;
	 }


	  /*

	  @include respond-between(xs,sm) {
		html {
			background-color: orange;
		}
	  }
	  */
